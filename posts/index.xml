<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Cloudy Caffeine with Ana</title><link>https://ana-cozma.github.io/blog/posts/</link><description>Recent content in Posts on Cloudy Caffeine with Ana</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 07 Feb 2024 13:32:57 +0100</lastBuildDate><atom:link href="https://ana-cozma.github.io/blog/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>AWS: Handling 'Cannot delete entity, must remove tokens from principal first' error</title><link>https://ana-cozma.github.io/blog/posts/aws-iam-deleting-users/</link><pubDate>Wed, 07 Feb 2024 13:32:57 +0100</pubDate><guid>https://ana-cozma.github.io/blog/posts/aws-iam-deleting-users/</guid><description>This blog post will be a quick one focusing on troubleshooting a less clear error, &amp;lsquo;Cannot delete entity, must remove tokens from principal first&amp;rsquo;, that Terraform can throw when you try to delete IAM users from AWS.
Let&amp;rsquo;s assume that in your Terraform configuration you manage IAM users and you want to delete one of them. You&amp;rsquo;d think that by simply removing the Terraform code and then running terraform apply it will delete the users.</description></item><item><title>Azure Application Gateway WAF config vs WAF policy</title><link>https://ana-cozma.github.io/blog/posts/azure-waf-configurations/</link><pubDate>Tue, 31 Oct 2023 13:35:49 +0200</pubDate><guid>https://ana-cozma.github.io/blog/posts/azure-waf-configurations/</guid><description>Recently, I had to enable WAF on our Azure Application Gateway. Because of our infrastructure setup, I wanted to have all the rules from OWASP 3.2 enabled, but I needed to be able to exclude some of our (valid) requests from being blocked as well. To achieve this, I could either try to configure the WAF Config section on our Gateway or create a WAF policy.
Given that it was not entirely clear how you can use proper exclusions and filters based on what you need, I decided to write this post to explain the differences I found between the two and how you can use them.</description></item><item><title>Ensuring Seamless Operations: Troubleshooting and Resolving Dapr Certificate Expiry</title><link>https://ana-cozma.github.io/blog/posts/dapr-certificate-renewal/</link><pubDate>Tue, 18 Jul 2023 16:13:45 +0200</pubDate><guid>https://ana-cozma.github.io/blog/posts/dapr-certificate-renewal/</guid><description>A CNCF project, the Distributed Application Runtime (Dapr) provides APIs that simplify microservice connectivity. Whether your communication pattern is service to service invocation or pub/sub messaging, Dapr helps you write resilient and secured microservices. Essentially, it provides a new way to build microservices by using the reusable blocks implemented as sidecars.
While Dapr is great as it is language agnostic and it solves some challenges that come with microservices and distributed systems, such as message broker integration, encryption etc, troubleshooting Dapr issues can be quite challenging.</description></item><item><title>Terraform: Add Group Members as Owners to a Service Principal or Az AD Application</title><link>https://ana-cozma.github.io/blog/posts/terraform-add-group-members-as-owners/</link><pubDate>Fri, 21 Apr 2023 11:18:28 +0200</pubDate><guid>https://ana-cozma.github.io/blog/posts/terraform-add-group-members-as-owners/</guid><description>Currently, there is no option for adding a Group as an Owner to a Service Principal or Azure AD Application.
If you try you will most likely run into the following error:
unexpected status 400 with OData error: Request_BadRequest: The reference target │ &amp;#39;Group_0000000-0000-000000-000000&amp;#39; of type &amp;#39;Group&amp;#39; is invalid for the &amp;#39;owners&amp;#39; reference. This is a quick post on how you can add members of an Az AD Group as Owners of a Service Principal or Azure AD Application.</description></item><item><title>Troubleshooting and Resolving a Pod Stuck in 'CreateContainerConfigError' in Kubernetes</title><link>https://ana-cozma.github.io/blog/posts/k8s-pod-createcontainerconfigerror/</link><pubDate>Mon, 30 Jan 2023 22:38:04 +0100</pubDate><guid>https://ana-cozma.github.io/blog/posts/k8s-pod-createcontainerconfigerror/</guid><description>The other day I was making changes to my helm charts and, after deploying my application, I noticed that one of my pods was stuck in a CreateContainerConfigError state. This is a pretty tricky error because it doesn&amp;rsquo;t give you any details on what the underlying issue could be.
What is the CreateContainerConfigError? To understand this, let&amp;rsquo;s look at what happens at deployment time to give you an idea of the flow and what could go wrong at each step.</description></item><item><title>Kube-bench and Popeye: A Power Duo for AKS Security Compliance</title><link>https://ana-cozma.github.io/blog/posts/k8s-aks-security-helpers/</link><pubDate>Mon, 23 Jan 2023 19:10:37 +0100</pubDate><guid>https://ana-cozma.github.io/blog/posts/k8s-aks-security-helpers/</guid><description>In today&amp;rsquo;s world, security is a top priority for any organization or at least it should be. With the rise of cloud computing, the number of security threats has increased exponentially.
So how do we keep up? Where do we start?
Microsoft has created a set of security benchmarks to give users a starting point for setting up their security configurations. The Microsoft cloud security benchmark (MCSB) is the successor of Azure Security Benchmark (ASB), which was rebranded in October 2022 (Currently in public preview).</description></item><item><title>Terraform vs Helm for Managing K8s Objects</title><link>https://ana-cozma.github.io/blog/posts/terraform-vs-helm-for-managing-k8s-objects/</link><pubDate>Wed, 10 Aug 2022 19:34:20 +0100</pubDate><guid>https://ana-cozma.github.io/blog/posts/terraform-vs-helm-for-managing-k8s-objects/</guid><description>When I started migrating to Kubernetes (K8s) I discovered that I can use Terraform for managing not only the infrastructure, but also I could define the K8s objects in it, but I also could use Helm to handle that. But what would be a good way to handle this?
In this post we will cover Terraform and Helm for managing Kubernetes clusters with some code snippets and an idea on how you can use them together to get you started.</description></item><item><title>Terraform: Alternative to the Template provider on Apple M1 MBP</title><link>https://ana-cozma.github.io/blog/posts/terraform-alternative-to-deprecated-template-prov/</link><pubDate>Fri, 05 Aug 2022 17:52:07 +0100</pubDate><guid>https://ana-cozma.github.io/blog/posts/terraform-alternative-to-deprecated-template-prov/</guid><description>We ran into an issue while applying our Terraform infrastructure on a M1 Mac where we were making use of the Terraform Provider Template.
When applying it, we were getting the following error:
template v2.2.0 does not have a package available for your current platform, darwin_arm64 Since the provider is archived, we need to find an alternative.
What does archiving mean? Per Terraform Archiving Providers documentation.
The code repository and all commit, issue, and PR history will still be available.</description></item><item><title>K8s: Fix Helm release failing with an upgrade still in progress</title><link>https://ana-cozma.github.io/blog/posts/k8s-fix-helm-release-failing-with-an-upgrade/</link><pubDate>Mon, 30 May 2022 17:49:48 +0100</pubDate><guid>https://ana-cozma.github.io/blog/posts/k8s-fix-helm-release-failing-with-an-upgrade/</guid><description>This article applies to: Helm v3.8.0
Helm helps you manage Kubernetes applications — Helm Charts help you define, install, and upgrade even the most complex Kubernetes application. More details on Helm and the commands can be found in the official documentation.
Assuming you use Helm to handle your releases, you might end up in a case where the release will be stuck in a pending state and all subsequent releases will keep failing.</description></item><item><title>Terraform: Handling the deletion of a non-empty AWS S3 Bucket</title><link>https://ana-cozma.github.io/blog/posts/terraform-deletion-of-non-empty-s3-bucket/</link><pubDate>Wed, 25 May 2022 12:39:03 +0100</pubDate><guid>https://ana-cozma.github.io/blog/posts/terraform-deletion-of-non-empty-s3-bucket/</guid><description>This article applies to Terraform v1.1.4
When using Terraform to manage your infrastructure you will end up in the situation when you want to remove some resources.
You can do this in several ways, but most of the time you can also just remove the Terraform configuration by commenting it out the code, or removing the calling of the module, run terraform apply and it will get rid of the resources.</description></item><item><title>K8s: How to restart Kubernetes Pods</title><link>https://ana-cozma.github.io/blog/posts/k8s-how-to-restart-pods/</link><pubDate>Wed, 25 May 2022 12:35:04 +0100</pubDate><guid>https://ana-cozma.github.io/blog/posts/k8s-how-to-restart-pods/</guid><description>This article applies for Kubernetes v1.15 and above.
Kubernetes, also known as K8s, is an open-source system for automating deployment, scaling, and management of containerized applications.
It groups containers that make up an application into logical units for easy management and discovery. But what if something happens to the container? In this case, you might need a quick and easy way to restart it.
Kubernetes Pods usually run until there is a new deployment that will replace them.</description></item><item><title>KongPlugin CORS: fixing Access-Control-Allow-Origin header missing error</title><link>https://ana-cozma.github.io/blog/posts/kong-pluging-cors-policy/</link><pubDate>Tue, 07 Dec 2021 17:55:37 +0100</pubDate><guid>https://ana-cozma.github.io/blog/posts/kong-pluging-cors-policy/</guid><description>In our current environment we have Kong as our Ingress controller in front of our applications.
We are also using the Kong CORS Plugin to enable browsers to make cross-origin requests to our application&amp;rsquo;s backend. The CORS plugin lets you configure the API gateway behavior to support Cross-Origin Resource Sharing (CORS). If you want to dig deeper into what CORS is, please check the CORS glossary link.
We also make use of helm charts to handle our deployment.</description></item></channel></rss>